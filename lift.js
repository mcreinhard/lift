// Generated by CoffeeScript 1.8.0
(function() {
  var binaryOpFunctions, binaryOps, unaryOpFunctions, unaryOps,
    __slice = [].slice;

  unaryOps = ['+', '-', '~', '!'];

  binaryOps = ['+', '-', '*', '/', '%', '&', '|', '^', '>>', '<<', '>>>', '==', '!=', '===', '!==', '>', '>=', '<', '<=', '&&', '||'];

  unaryOpFunctions = _.zipObject(unaryOps, _.map(unaryOps, function(op) {
    return eval("(function(a) {return " + op + " a;})");
  }));

  binaryOpFunctions = _.zipObject(binaryOps, _.map(binaryOps, function(op) {
    return eval("(function(a, b) {return a " + op + " b;})");
  }));

  this.lift = function(f) {
    return function() {
      var gs;
      gs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return function(x) {
        var g;
        return f.apply(null, (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = gs.length; _i < _len; _i++) {
            g = gs[_i];
            _results.push(typeof g === 'function' ? g(x) : g);
          }
          return _results;
        })());
      };
    };
  };

  lift.op = function(f) {
    return _.extend(f, _.mapValues(binaryOpFunctions, function(v) {
      return function(g) {
        return lift.op(lift(v)(f, g));
      };
    }));
  };

  _.extend(lift.op, _.mapValues(unaryOpFunctions, lift));

}).call(this);
